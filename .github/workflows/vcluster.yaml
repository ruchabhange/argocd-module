##github actions file
name: Create Cluster

on:
  pull_request:
    types: [closed ,opened]

env:
  PR_NUMBER: ${{ github.event.number }}
jobs:
  create-cluster:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'POC') }}
    runs-on: ubuntu-latest
    steps:
      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
          #aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          
      - name: Connect to EKS             
        run: |
          aws eks --region ap-south-1 update-kubeconfig --name Infracloud-Enterprise-Cluster
          echo "$PR_NUMBER"
          
      - name: Install helm
        if: ${{ github.event.action == 'opened' }}
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          
      - name: Create VCluster
        if: ${{ github.event.action == 'opened' }}
        run: |
          helm repo add loft-sh https://charts.loft.sh
          helm repo update
          helm install vcluster loft-sh/vcluster-k8s -n "prnumber$PR_NUMBER" --create-namespace
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Read file contents for argocd version
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'argocd') }}
        id: read_file
        uses: andstor/file-reader-action@v1
        with:
          path: "version-argocd.txt"
          
      - name: File contents according to argocd version
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'argocd') }}
        run: |
          export VERSION_OUTPUT=${{ steps.read_file.outputs.contents }}
          echo $VERSION_OUTPUT
          touch file
          curl "https://raw.githubusercontent.com/argoproj/argo-cd/${VERSION_OUTPUT}/manifests/install.yaml" > file

      - name: Install argocd 
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'argocd') }}
        run: |
          kubectl wait --for condition=Available=True deploy -n "prnumber$PR_NUMBER" -l release=vcluster --timeout=60s
          curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && sudo install -c -m 0755 vcluster /usr/local/bin && rm -f vcluster
          vcluster --version
          vcluster connect vcluster -n "prnumber$PR_NUMBER" -- kubectl create namespace argocd
          vcluster connect vcluster -n "prnumber$PR_NUMBER" -- kubectl apply -n argocd -f file
          vcluster connect vcluster -n "prnumber$PR_NUMBER" -- kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'

      - name: Read file contents for linkerd
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'linkerd') }}
        id: read_file_linkerd
        uses: andstor/file-reader-action@v1
        with:
          path: "version-linkerd.txt"
          
      - name: File contents according to linkerd version
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'linkerd') }}
        run: |
          export VERSION_OUTPUT=${{ steps.read_file_linkerd.outputs.contents }}
          echo $VERSION_OUTPUT
          echo ${{ steps.read_file_linkerd.outputs.contents }}
          
      - name: Install linkerd
        if: ${{ github.event.action == 'opened' && contains(github.event.pull_request.labels.*.name, 'linkerd') }}
        run: |
          kubectl wait --for condition=Available=True deploy -n "prnumber$PR_NUMBER" -l release=vcluster --timeout=60s
          curl -L -o vcluster "https://github.com/loft-sh/vcluster/releases/latest/download/vcluster-linux-amd64" && sudo install -c -m 0755 vcluster /usr/local/bin && rm -f vcluster
          vcluster --version
          wget https://dl.step.sm/gh-release/cli/docs-cli-install/v0.23.4/step-cli_0.23.4_amd64.deb
          sudo dpkg -i step-cli_0.23.4_amd64.deb
          step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure
          step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key
          vcluster connect vcluster -n  "prnumber$PR_NUMBER" -- helm repo add linkerd https://helm.linkerd.io/stable
          vcluster connect vcluster -n  "prnumber$PR_NUMBER" -- helm install linkerd-crds linkerd/linkerd-crds -n linkerd --create-namespace
          vcluster connect vcluster -n  "prnumber$PR_NUMBER" -- helm install linkerd-control-plane -n linkerd --set-file identityTrustAnchorsPEM=ca.crt --set-file identity.issuer.tls.crtPEM=issuer.crt --set-file identity.issuer.tls.keyPEM=issuer.key linkerd/linkerd-control-plane --version ${{ steps.read_file_linkerd.outputs.contents }}
          vcluster connect vcluster -n  "prnumber$PR_NUMBER" -- helm install linkerd-viz linkerd/linkerd-viz -n linkerd-viz --create-namespace
          
      - name: Delete Helm chart
        if: ${{ github.event.action == 'closed' }}
        run: |
          helm uninstall vcluster -n "prnumber$PR_NUMBER" 
          kubectl delete namespace "prnumber$PR_NUMBER"
